# need to modify
tabby.build.enable                        = true
tabby.load.enable                         = false

tabby.build.target                        = cases/targets
# # 不需要全量分析的依赖文件目录，加快分析速度
tabby.build.libraries                     = libs
# # 分析类型 web 或 gadget，web模式会剔除常见jar包的全量分析，
# gadget模式会对target目录下的文件进行全量分析
tabby.build.mode                          = web
tabby.output.directory                    = ./output/dev

# debug
tabby.debug.details                       = false

# jdk settings
# 分析过程是否加入基础的2个jdk依赖
tabby.build.isJDKProcess                  = false
# 分析过程是否加入全量的jdk依赖
tabby.build.withAllJDK                    = false
# ?分析过程是否剔除当前运行环境的jdk依赖，
# 此时target目录需要提供需要分析的jdk依赖
tabby.build.excludeJDK                    = true
# 分析过程是否仅分析jdk依赖，不会去分析target目录下的文件
tabby.build.isJDKOnly                     = false

# dealing fatjar
tabby.build.checkFatJar                   = true    

# pointed-to analysis
tabby.build.isFullCallGraphCreate         = false
tabby.build.thread.timeout                = 2
tabby.build.isNeedToCreateIgnoreList      = false

# db settings
tabby.cache.isDockerImportPath            = false

tabby.neo4j.username                      = neo4j
tabby.neo4j.password                      = neo4j123
tabby.neo4j.url                           = bolt://127.0.0.1:7687

# custom cfg
tabby.preprocess.apk                       =cases/apk/jlink-debug.apk
tabby.preprocess.cases                     =cases
